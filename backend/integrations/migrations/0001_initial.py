# Generated by Django 4.2.7 on 2025-09-28 13:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('farms', '0005_farm_description_farm_has_system_integration_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='IntegrationError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_type', models.CharField(help_text='Type of integration', max_length=50)),
                ('error_type', models.CharField(help_text='Type of error (connection, authentication, data, etc.)', max_length=100)),
                ('error_message', models.TextField(help_text='Detailed error message')),
                ('error_code', models.CharField(blank=True, help_text='Error code if available', max_length=50)),
                ('stack_trace', models.TextField(blank=True, help_text='Stack trace for debugging')),
                ('resolved', models.BooleanField(default=False, help_text='Whether the error has been resolved')),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how the error was resolved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_by', models.CharField(blank=True, help_text='Who resolved the error', max_length=100)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integration_errors', to='farms.farm')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_type', models.CharField(help_text='Type of integration (rotem, future_system, etc.)', max_length=50)),
                ('action', models.CharField(help_text='Action performed (sync, test_connection, etc.)', max_length=100)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial Success'), ('in_progress', 'In Progress')], help_text='Status of the action', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Additional details or error message')),
                ('data_points_processed', models.IntegerField(default=0, help_text='Number of data points processed')),
                ('execution_time', models.FloatField(blank=True, help_text='Execution time in seconds', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integration_logs', to='farms.farm')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['farm', 'integration_type'], name='integration_farm_id_0bdf04_idx'), models.Index(fields=['timestamp'], name='integration_timesta_b8c6eb_idx'), models.Index(fields=['status'], name='integration_status_4ace1f_idx')],
            },
        ),
        migrations.CreateModel(
            name='IntegrationHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_type', models.CharField(max_length=50)),
                ('is_healthy', models.BooleanField(default=True, help_text='Whether the integration is currently healthy')),
                ('last_successful_sync', models.DateTimeField(blank=True, null=True)),
                ('last_attempted_sync', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failures', models.IntegerField(default=0, help_text='Number of consecutive failures')),
                ('success_rate_24h', models.FloatField(default=0.0, help_text='Success rate in the last 24 hours')),
                ('average_response_time', models.FloatField(blank=True, help_text='Average response time in seconds', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integration_health', to='farms.farm')),
                ('last_error', models.ForeignKey(blank=True, help_text='Last error encountered', null=True, on_delete=django.db.models.deletion.SET_NULL, to='integrations.integrationerror')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('farm', 'integration_type')},
            },
        ),
        migrations.AddIndex(
            model_name='integrationerror',
            index=models.Index(fields=['farm', 'integration_type'], name='integration_farm_id_b5c2d3_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationerror',
            index=models.Index(fields=['resolved'], name='integration_resolve_9930c3_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationerror',
            index=models.Index(fields=['created_at'], name='integration_created_dc99cd_idx'),
        ),
    ]
