version: '3.8'

services:
  # Email Scheduler Service
  email-scheduler:
    image: alpine:latest
    container_name: chicken_email_scheduler
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache dcron docker-cli &&
        echo '0 21 * * * cd /app && docker-compose exec backend python manage.py send_daily_tasks' | crontab - &&
        echo 'Starting email scheduler...' &&
        crond -f
      "
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - chicken_network

  # Existing services
  backend:
    build: ./backend
    container_name: chicken_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DATABASE_URL=postgresql://postgres:password@db:5432/chicken_management
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - ADMIN_EMAIL=admin@example.com
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-noreply@chickenmanagement.com}
    depends_on:
      - db
    networks:
      - chicken_network

  db:
    image: postgres:15
    container_name: chicken_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=chicken_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chicken_network

  frontend:
    build: ./frontend
    container_name: chicken_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - chicken_network

volumes:
  postgres_data:

networks:
  chicken_network:
    driver: bridge
